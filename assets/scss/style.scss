/*
 * Based on "Hugo Theme Stack" (https://github.com/CaiJimmy/hugo-theme-stack) by Jimmy Cai (https://jimmycai.com)
 */

$breakpoints: ( sm: 640px, md: 768px, lg: 1024px, xl: 1280px, 2xl: 1536px, );

@mixin respond($breakpoint)
{
    @if not map-has-key($breakpoints, $breakpoint) 
    {
        @warn "'#{$breakpoint}' is not a valid breakpoint";
    }
    @else 
    {
        @media (min-width: map-get($breakpoints, $breakpoint)) { @content; }
    }
}

$defaultTagBackgrounds: #8ea885, #df7988, #0177b8, #ffb900, #6b69d6;
$defaultTagColors: #fff, #fff, #fff, #fff, #fff;

/*
 * Sizes, spacing, etc
 */
:root
{
    --main-top-padding: 35px;
    @include respond(xl) { --main-top-padding: 50px; }

    --tag-border-radius: 4px;
    --section-separation: 40px;

    --sys-font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Droid Sans", "Helvetica Neue";
    --zh-font-family: "PingFang SC", "Hiragino Sans GB", "Droid Sans Fallback", "Microsoft YaHei";

    --base-font-family: "Lato", var(--sys-font-family), var(--zh-font-family), sans-serif;
    --code-font-family: Menlo, Monaco, Consolas, "Courier New", var(--zh-font-family), monospace;

    --menu-icon-separation: 40px;
    --container-padding: 15px;
    --widget-separation: var(--section-separation);

    --blockquote-border-size: 4px;
    --heading-border-size: 4px;

    --card-border-radius: 10px;

    --card-padding: 20px;
    @include respond(md) { --card-padding: 25px; }
    @include respond(xl) { --card-padding: 30px; }

    --small-card-padding: 25px 20px;
    @include respond(md) { --small-card-padding: 25px; }
}

/*
 * Colors
 */
:root 
{
    --primary-background-color: hsl(0 0% 88.2%);
    --primary-foreground-color: hsl(0 0% 25.1%);
    --blockquote-accent-color: hsl(41 100% 50%);
    --code-accent-color: hsl(179 50% 50%);

    //These have no effect because the style that uses them does not work for some reason.
    --link-background-color: 189, 195, 199;
    --link-background-opacity: 0.5;
    --link-background-opacity-hover: 0.7;

    --table-border-color: #dadada;
    --tr-even-background-color: #efefee;

    --kbd-border-color: #dadada;

    --card-background: #ececec;
    --card-background-selected: #f6f6f6;

    --card-text-color-main: #000;
    --card-text-color-secondary: #747474;
    --card-text-color-tertiary: #767676;
    --card-separator-color: rgba(218, 218, 218, 0.5);

    &[data-scheme="dark"] 
    {
        --primary-background-color: hsl(240 13.5% 7.3%);
        --primary-foreground-color: hsl(0 0% 94.5%);
        --blockquote-accent-color: hsl(41 100% 50%);
        --code-accent-color: hsl(0 0% 100%);

        --shadow-color-1: rgba(0, 0, 0, 0.2);
        --shadow-color-2: rgba(0, 0, 0, 0.3);

	    --link-background-color: 89, 89, 109;

        --table-border-color: #717171;
        --tr-even-background-color: #545454;

        --card-background: #16161d;
        --card-background-selected: rgba(255, 255, 255, 0.16);
        --card-text-color-main: rgba(255, 255, 255, 0.9);
        --card-text-color-secondary: rgba(255, 255, 255, 0.7);
        --card-text-color-tertiary: rgba(255, 255, 255, 0.5);
        --card-separator-color: rgba(255, 255, 255, 0.12);

        --table-border-color: #717171;
        --tr-even-background-color: #545454;

        --card-background: #16161d;
        --card-background-selected: rgba(255, 255, 255, 0.16);
        --card-text-color-main: rgba(255, 255, 255, 0.9);
        --card-text-color-secondary: rgba(255, 255, 255, 0.7);
        --card-text-color-tertiary: rgba(255, 255, 255, 0.5);
        --card-separator-color: rgba(255, 255, 255, 0.12);
    }

    --body-background: color-mix(in oklab, var(--primary-background-color) 100%, var(--primary-foreground-color) 2%);
    --body-text-color: color-mix(in oklab, var(--primary-foreground-color) 100%, var(--primary-background-color) 10%);
    --accent-color-text: var(--body-text-color); //only used for categories/tags
    --accent-color: color-mix(in oklab, var(--primary-background-color) 100%, var(--primary-foreground-color) 25%); //used for accents left of headings, and category/tag backgrounds
    --accent-color-darker: color-mix(in oklab, var(--primary-background-color) 90%, var(--primary-foreground-color) 10%); //used when hovering over a category/tag
    --link-color: color-mix(in oklab, var(--primary-foreground-color) 70%, #4040FF 30%);
    --link-color-hover: color-mix(in oklab, var(--primary-foreground-color) 10%, #4040FF 90%);
    --scrollbar-track: color-mix(in oklab, var(--primary-background-color) 100%, var(--primary-foreground-color) 20%);
    --scrollbar-thumb: color-mix(in oklab, var(--primary-background-color) 100%, var(--primary-foreground-color) 50%);

    --shadow-color-1: rgba(0, 0, 0, 0.04);
    --shadow-color-2: rgba(0, 0, 0, 0.06);

    --blockquote-background-color: color-mix(in oklab, var(--primary-background-color) 90%, var(--blockquote-accent-color) 10%);
    --pre-background-color: color-mix(in oklab, var(--primary-background-color) 90%, var(--code-accent-color) 10%);
    --pre-text-color: color-mix(in oklab, var(--primary-foreground-color) 50%, #808000 50%); //regular text if not covered by any highlighting rule

    //--code-background-color: rgba(0, 0, 0, 0.12);
    --code-background-color: color-mix(in oklab, var(--primary-background-color) 80%, var(--code-accent-color) 15%);
    --code-text-color: var(--primary-foreground-color);
}

/**
*   Article content font settings
*/
:root 
{
    --article-font-family: var(--base-font-family);
    --article-font-size: 1.6rem;

    @include respond(md) { --article-font-size: 1.7rem; }

    --article-line-height: 1.85;
}

/*
 * Shadow style, Thanks to https://www.figma.com/community/plugin/744987207861965946/Shadow-picker
 */
:root
{
    --shadow-l1: 0px 4px 8px var(--shadow-color-1), 0px 0px 2px var(--shadow-color-2), 0px 0px 1px var(--shadow-color-1);
    --shadow-l2: 0px 10px 20px var(--shadow-color-1), 0px 2px 6px var(--shadow-color-1), 0px 0px 1px var(--shadow-color-1);
    --shadow-l3: 0px 10px 20px var(--shadow-color-1), 0px 2px 6px var(--shadow-color-1), 0px 0px 1px var(--shadow-color-1);
    --shadow-l4: 0px 24px 32px var(--shadow-color-1), 0px 16px 24px var(--shadow-color-1), 0px 4px 8px var(--shadow-color-1), 0px 0px 1px var(--shadow-color-1);
}

/*
 * Syntax highlighting (used to be in partials/highlight/common.css, partials/highlight/light.css, and partials/highlight/dark.css)
 */

/* LineTableTD */
.chroma .lntd
{
    vertical-align: top;
    padding: 0;
    margin: 0;
    border: 0;
}

/* LineTable */
.chroma .lntable 
{
    border-spacing: 0;
    padding: 0;
    margin: 0;
    border: 0;
    width: 100%;
    display: block;

    > tbody 
    {
        display: block;
        width: 100%;
        > tr 
        {
            display: flex;
            width: 100%;
            > td:last-child { overflow-x: auto; }
        }
    }
}

/* Background               */ .chroma      { background-color: var(--pre-background-color); }
/* Other                    */ .chroma .x   { }
/* Error                    */ .chroma .err { color: #FF0000; }
/* LineHighlight            */ .chroma .hl  { background-color: #ffffcc; display: block; width: 100%; }
/* LineNumbersTable         */ .chroma .lnt { color: var(--primary-foreground-color); font-weight: 100; margin-right: 0.4em; padding: 0 0.4em 0 0.4em; display: block; }
/* LineNumbers              */ .chroma .ln  { color: #8080FF/* #7f7f7f */; margin-right: 0.4em; padding: 0 0.4em 0 0.4em; }
/* Keyword                  */ .chroma .k   { color: var(--primary-foreground-color); font-weight: bold; } //all keywords except var
/* KeywordConstant          */ .chroma .kc  { color: color-mix(in oklab, var(--primary-foreground-color) 50%, #808080 50%); } //true, false
/* KeywordDeclaration       */ .chroma .kd  { color: var(--primary-foreground-color); font-weight: bold; } //private, public, static
/* KeywordNamespace         */ .chroma .kn  { color: #FF00FF; }
/* KeywordPseudo            */ .chroma .kp  { color: #FF00FF; }
/* KeywordReserved          */ .chroma .kr  { color: #FF00FF; }
/* KeywordType              */ .chroma .kt  { color: var(--primary-foreground-color); font-weight: bold; } //the var keyword
/* Name                     */ .chroma .n   { color: color-mix(in oklab, var(--primary-foreground-color) 50%, #FFFF00 50%); } //regular text
/* NameAttribute            */ .chroma .na  { color: color-mix(in oklab, var(--primary-foreground-color) 50%, #FF8000 50%); font-weight: bold }
/* NameBuiltin              */ .chroma .nb  { color: #FF00FF; }
/* NameBuiltinPseudo        */ .chroma .bp  { color: #FF00FF; }
/* NameClass                */ .chroma .nc  { color: color-mix(in oklab, var(--primary-foreground-color) 50%, #ffa000 50%); } //class names, interface names
/* NameConstant             */ .chroma .no  { color: #FF00FF; }
/* NameDecorator            */ .chroma .nd  { color: #FF00FF; }
/* NameEntity               */ .chroma .ni  { color: #FF00FF; }
/* NameException            */ .chroma .ne  { color: #FF00FF; }
/* NameFunction             */ .chroma .nf  { color: #FF00FF; }
/* NameFunctionMagic        */ .chroma .fm  { color: #FF00FF; }
/* NameLabel                */ .chroma .nl  { color: #FF00FF; }
/* NameNamespace            */ .chroma .nn  { color: #FF00FF; }
/* NameOther                */ .chroma .nx  { color: #FF00FF; }
/* NameProperty             */ .chroma .py  { color: #FF00FF; }
/* NameTag                  */ .chroma .nt  { color: var(--primary-foreground-color); font-weight: bold; }
/* NameVariable             */ .chroma .nv  { color: #FF00FF; }
/* NameVariableClass        */ .chroma .vc  { color: #FF00FF; }
/* NameVariableGlobal       */ .chroma .vg  { color: #FF00FF; }
/* NameVariableInstance     */ .chroma .vi  { color: #FF00FF; }
/* NameVariableMagic        */ .chroma .vm  { color: #FF00FF; }
/* Literal                  */ .chroma .l   { color: #FF00FF; }
/* LiteralDate              */ .chroma .ld  { color: #FF00FF; }
/* LiteralString            */ .chroma .s   { color: color-mix(in oklab, var(--primary-foreground-color) 50%, #808080 50%); }
/* LiteralStringAffix       */ .chroma .sa  { color: #FF00FF; }
/* LiteralStringBacktick    */ .chroma .sb  { color: #FF00FF; }
/* LiteralStringChar        */ .chroma .sc  { color: #FF00FF; }
/* LiteralStringDelimiter   */ .chroma .dl  { color: #FF00FF; }
/* LiteralStringDoc         */ .chroma .sd  { color: #FF00FF; }
/* LiteralStringDouble      */ .chroma .s2  { color: #FF00FF; }
/* LiteralStringEscape      */ .chroma .se  { color: #FF00FF; }
/* LiteralStringHeredoc     */ .chroma .sh  { color: #FF00FF; }
/* LiteralStringInterpol    */ .chroma .si  { color: #FF00FF; }
/* LiteralStringOther       */ .chroma .sx  { color: #FF00FF; }
/* LiteralStringRegex       */ .chroma .sr  { color: #FF00FF; }
/* LiteralStringSingle      */ .chroma .s1  { color: #FF00FF; }
/* LiteralStringSymbol      */ .chroma .ss  { color: #FF00FF; }
/* LiteralNumber            */ .chroma .m   { color: color-mix(in oklab, var(--primary-foreground-color) 50%, #808080 50%); }
/* LiteralNumberBin         */ .chroma .mb  { color: #FF00FF; }
/* LiteralNumberFloat       */ .chroma .mf  { color: #FF00FF; }
/* LiteralNumberHex         */ .chroma .mh  { color: #FF00FF; }
/* LiteralNumberInteger     */ .chroma .mi  { color: #FF00FF; }
/* LiteralNumberIntegerLong */ .chroma .il  { color: #FF00FF; }
/* LiteralNumberOct         */ .chroma .mo  { color: #FF00FF; }
/* Operator                 */ .chroma .o   { color: #FF00FF; }
/* OperatorWord             */ .chroma .ow  { color: #FF00FF; }
/* Punctuation              */ .chroma .p   { color: var(--primary-foreground-color); font-weight: bold; }
/* Comment                  */ .chroma .c   { color: #FF00FF; }
/* CommentHashbang          */ .chroma .ch  { color: #FF00FF; }
/* CommentMultiline         */ .chroma .cm  { color: #FF00FF; }
/* CommentSingle            */ .chroma .c1  { color: color-mix(in oklab, var(--primary-foreground-color) 50%, #00FF00 50%); } //single-line comment
/* CommentSpecial           */ .chroma .cs  { color: #FF00FF; }
/* CommentPreproc           */ .chroma .cp  { color: #FF00FF; }
/* CommentPreprocFile       */ .chroma .cpf { color: #FF00FF; }
/* Generic                  */ .chroma .g   { color: #FF00FF; }
/* GenericDeleted           */ .chroma .gd  { color: #FF00FF; }
/* GenericEmph              */ .chroma .ge  { color: #FF00FF; font-style: italic; }
/* GenericError             */ .chroma .gr  { color: #FF00FF; }
/* GenericHeading           */ .chroma .gh  { color: #FF00FF; }
/* GenericInserted          */ .chroma .gi  { color: #FF00FF; }
/* GenericOutput            */ .chroma .go  { color: #FF00FF; }
/* GenericPrompt            */ .chroma .gp  { color: #FF00FF; }
/* GenericStrong            */ .chroma .gs  { color: #FF00FF; font-weight: bold; }
/* GenericSubheading        */ .chroma .gu  { color: #FF00FF; }
/* GenericTraceback         */ .chroma .gt  { color: #FF00FF; }
/* GenericUnderline         */ .chroma .gl  { color: #FF00FF; }
/* TextWhitespace           */ .chroma .w   { color: #FF00FF; }

@import "grid.scss";

@import "external/normalize.scss";

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

.hamburger 
{
    padding-top: 10px;
    display: inline-block;
    cursor: pointer;
    transition-property: opacity, filter;
    transition-duration: 0.15s;
    transition-timing-function: linear;
    font: inherit;
    color: inherit;
    text-transform: none;
    background-color: transparent;
    border: 0;
    margin: 0;
    overflow: visible;
}

.hamburger:hover { opacity: 0.7; }

.hamburger.is-active:hover { opacity: 0.7; }

.hamburger.is-active .hamburger-inner,
.hamburger.is-active .hamburger-inner::before,
.hamburger.is-active .hamburger-inner::after { background-color: #000; }

.hamburger-box 
{
    width: 30px;
    height: 24px;
    display: inline-block;
    position: relative;
}

.hamburger-inner 
{
    display: block;
    top: 50%;
    margin-top: -2px;
}

.hamburger-inner,
.hamburger-inner::before,
.hamburger-inner::after 
{
    width: 30px;
    height: 2px;
    background-color: var(--card-text-color-main);
    border-radius: 4px;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
}

.hamburger-inner::before,
.hamburger-inner::after 
{
    content: "";
    display: block;
}

.hamburger-inner::before { top: -10px; }

.hamburger-inner::after { bottom: -10px; }

.hamburger--spin .hamburger-inner 
{
    transition-duration: 0.22s;
    transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spin .hamburger-inner::before { transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in; }

.hamburger--spin .hamburger-inner::after { transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--spin.is-active .hamburger-inner 
{
    transform: rotate(225deg);
    transition-delay: 0.12s;
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger--spin.is-active .hamburger-inner::before 
{
    top: 0;
    opacity: 0;
    transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;
}

.hamburger--spin.is-active .hamburger-inner::after 
{
    bottom: 0;
    transform: rotate(-90deg);
    transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
}

#toggle-menu 
{
    background: none;
    border: none;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 2;
    cursor: pointer;

    [dir="rtl"] & 
    {
        left: 0;
        right: auto;
    }

    @include respond(md) { display: none; }

    outline: none;

    &.is-active {
        .hamburger-inner,
        .hamburger-inner::before,
        .hamburger-inner::after { background-color: var(--accent-color); }
    }
}

/* Menu style */
#main-menu 
{
    list-style: none;
    overflow-y: auto;
    flex-grow: 1;
    font-size: 1.4rem;
    background-color: var(--card-background);

    box-shadow: var(--shadow-l1);
    display: none;
    margin: 0 calc(var(--container-padding) * -1);

    padding: 30px 30px;
    @include respond(xl) { padding: 15px 0; }

    &, .menu-bottom-section ol 
    {
        flex-direction: column;
        gap: 30px;
        @include respond(xl) { gap: 25px; }
    }

    &.show { display: flex; }

    @include respond(md) 
    {
        align-items: flex-end;
        display: flex;
        background-color: transparent;
        padding: 0;
        box-shadow: none;
        margin: 0;
    }

    li
    {
        position: relative;
        vertical-align: middle;
        padding: 0;

        @include respond(md) { width: 100%; }

        svg 
        {
            stroke: currentColor;
            stroke-width: 1.33px;
            width: 20px;
            height: 20px;
        }

        a
        {
            height: 100%;
            display: inline-flex;
            align-items: center;
            color: var(--body-text-color);
            gap: var(--menu-icon-separation);
        }

        span
        {
            flex: 1;
        }

        &.current
        {
            a 
            {
                //color: var(--accent-color);
                font-weight: bold;
            }
        }

        &.menu-bottom-section 
        {
            margin-top: auto;

            ol 
            {
                display: flex;
                padding-left: 0;
            }
        }
    }
}

.menu-social
{
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: row;
    gap: 10px;

    svg 
    {
        width: 24px;
        height: 24px;
        stroke: var(--body-text-color);
        stroke-width: 1.33px;
    }
}

/* Default article style */
.article-list
{
    display: flex;
    flex-direction: column;
    gap: var(--section-separation);

    article 
    {
        display: flex;
        flex-direction: column;
        background-color: var(--card-background);
        box-shadow: var(--shadow-l1);
        border-radius: var(--card-border-radius);
        overflow: hidden;

        transition: box-shadow 0.3s ease;

        &:hover { box-shadow: var(--shadow-l2); }

        .article-image 
        {
            img 
            {
                width: 100%;
                height: 150px;
                object-fit: cover;

                @include respond(md) { height: 200px; }

                @include respond(xl) { height: 250px; }
            }
        }

        @for $i from 1 through length($defaultTagBackgrounds) 
        {
            &:nth-child(#{length($defaultTagBackgrounds)}n + #{$i}) 
            {
                .article-category a 
                {
                    background: nth($defaultTagBackgrounds, $i);
                    color: nth($defaultTagColors, $i);
                }
            }
        }
    }
}

.article-details
{
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: var(--card-padding);
    gap: 15px;
}

.article-title 
{
    font-family: var(--article-font-family);
    font-weight: 600;
    margin: 0;
    color: var(--card-text-color-main);
    font-size: 2.2rem;

    @include respond(xl) { font-size: 2.4rem; }

    a 
    {
        color: var(--card-text-color-main);
        &:hover { color: var(--card-text-color-main); }
    }
}

.article-subtitle 
{
    font-weight: normal;
    color: var(--card-text-color-secondary);
    line-height: 1.5;
    margin: 0;
    font-size: 1.75rem;
    @include respond(xl) { font-size: 2rem; }
}

.article-title-wrapper 
{
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.article-time,
.article-translations
{
    display: flex;
    color: var(--card-text-color-tertiary);
    gap: 15px;

    svg 
    {
        vertical-align: middle;
        width: 20px;
        height: 20px;
        stroke-width: 1.33px;
        flex-shrink: 0;
    }

    time,
    a
    {
        font-size: 1.4rem;
        color: var(--card-text-color-tertiary);
    }

    & > div 
    {
        display: inline-flex;
        align-items: center;
        gap: 15px;
    }
}

.article-time { flex-wrap: wrap; }

.article-translations 
{
    & > div { flex-wrap: wrap; }
}

.article-category,
.article-tags 
{
    display: flex;
    gap: 10px;
    flex-wrap: wrap;

    a 
    {
        color: var(--accent-color-text);
        background-color: var(--accent-color);
        padding: 8px 16px;
        border-radius: var(--tag-border-radius);
        display: inline-block;
        font-size: 1.4rem;
        transition: background-color 0.5s ease;

        &:hover
        {
            color: var(--accent-color-text);
            background-color: var(--accent-color-darker);
        }
    }
}

/* Compact style article list */
.article-list--compact
{
    border-radius: var(--card-border-radius);
    box-shadow: var(--shadow-l1);
    background-color: var(--card-background);
    --image-size: 50px;

    @include respond(md) { --image-size: 60px; }

    article 
    {
        & > a 
        {
            display: flex;
            align-items: center;
            padding: var(--small-card-padding);
            gap: 15px;
        }

        &:not(:last-of-type) { border-bottom: 1.5px solid var(--card-separator-color); }

        .article-details 
        {
            flex-grow: 1;
            padding: 0;
            min-height: var(--image-size);
            gap: 10px;
        }

        .article-title 
        {
            margin: 0;
            font-size: 1.6rem;

            @include respond(md) { font-size: 1.8rem; }
        }

        .article-image 
        {
            img 
            {
                width: var(--image-size);
                height: var(--image-size);
                object-fit: cover;
            }
        }

        .article-time { font-size: 1.4rem; }

        .article-preview 
        {
            font-size: 1.4rem;
            color: var(--card-text-color-tertiary);
            margin-top: 10px;
            line-height: 1.5;
        }
    }
}

/* Tile style article list */
.article-list--tile 
{
    article 
    {
        border-radius: var(--card-border-radius);
        overflow: hidden;
        position: relative;
        height: 350px;
        width: 250px;
        box-shadow: var(--shadow-l1);
        transition: box-shadow 0.3s ease;
        background-color: var(--card-background);

        &:hover { box-shadow: var(--shadow-l2); }

        &.has-image {
            .article-details { background-color: rgba(#000, 0.25); }
            .article-title { color: #fff; }
        }

        .article-image 
        {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

            img 
            {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
        }

        .article-details 
        {
            border-radius: var(--card-border-radius);
            position: relative;
            height: 100%;
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            z-index: 2;
            padding: 15px;

            @include respond(sm) { padding: 20px; }
        }

        .article-title
        {
            font-size: 2rem;
            font-weight: 500;
            color: var(--card-text-color-main);

            @include respond(sm) { font-size: 2.2rem; }
        }
    }
}

@import "partials/widgets.scss";

footer.site-footer 
{
    padding: 20px 0 var(--section-separation) 0;
    font-size: 1.4rem;
    line-height: 1.75;

    &:before //this displays a short horizontal line
    {
        content: "";
        display: block;
        height: 3px;
        width: 50px;
        background: var(--body-text-color);
        margin-bottom: 20px;
    }

    .copyright 
    {
        color: var(--body-text-color);
        font-weight: bold;
        margin-bottom: 5px;
    }

    .powerby
    {
        color: var(--body-text-color);
        font-weight: normal;
        font-size: 1.2rem;

        a { color: var(--body-text-color); }
    }
}

@import "partials/pagination.scss";
@import "partials/sidebar.scss";
@import "partials/base.scss";
@import "partials/layout/article.scss";
@import "partials/layout/list.scss";
@import "partials/layout/404.scss";
@import "partials/layout/search.scss";

a 
{
    &.external
    {
        background-image: url(/external-link.svg);
        background-position: center right;
        background-repeat: no-repeat;
        background-size: 0.857em;
        padding-right: 1em;
    }

    text-decoration: none;
    color: var(--link-color);
    &:hover { color: var(--link-color-hover); }

    &.link //For some unknown reason this does not work.
    {
        box-shadow: 0px -2px 0px rgba(var(--link-background-color), var(--link-background-opacity)) inset;
        transition: all 0.3s ease;
        &:hover { box-shadow: 0px calc(-1rem * var(--article-line-height)) 0px rgba(var(--link-background-color), var(--link-background-opacity-hover)) inset; }
    }
}

.section-title
{
    /* text-transform: uppercase; */
    margin-top: 0;
    margin-bottom: 10px;
    display: block;
    font-size: 2.6rem;
    font-weight: bold;
    color: var(--body-text-color);

    a { color: var(--body-text-color); }
}
